<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="1" skipped="0" tests="5" time="34.193" timestamp="2022-01-29T15:17:48.011830" hostname="LNGSHAL-378"><testcase classname="TestCase.test_login" name="test_pytest" time="0.002" /><testcase classname="TestCase.test_login.TestLogin" name="test_0_login[data0]" time="8.000" /><testcase classname="TestCase.test_login.TestLogin" name="test_0_login[data1]" time="2.411" /><testcase classname="TestCase.test_login.TestLogin" name="test_0_login[data2]" time="6.118"><failure message="AssertionError">self = &lt;TestCase.test_login.TestLogin object at 0x000002531B187820&gt;, data = {'expect': '========故意做错的断言==========', 'password': 'magaoge..00', 'phoneNum': '16621710375'}
access_web = &lt;selenium.webdriver.chrome.webdriver.WebDriver (session="936b1fb658681536731a912c9cff663e")&gt;

    @pytest.mark.parametrize("data",login_erro_data)
    def test_0_login(self, data,access_web):
        print(data)
        LoginPage(access_web).login(data["phoneNum"], data["password"])
        # 断言判断，三种方式，根据实际的场景来使用：
        # 1.find_element
        # 2.显式等待加载页面元素，加载不到判断错误
        # 3.assert
        time.sleep(0.5)
        # assert True
&gt;       LoginPage(access_web).assert_by_txt(access_web,data["expect"],loc.login_fieldText_Xpath,doc="首页_登录_登录失败断言")

TestCase\test_login.py:68: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;PageObject.login_page.LoginPage object at 0x000002531B187430&gt;, access_web = &lt;selenium.webdriver.chrome.webdriver.WebDriver (session="936b1fb658681536731a912c9cff663e")&gt;
excepct = '========故意做错的断言==========', locator = ('xpath', "//em[text()='登录失败,请确认账号和密码正确']"), doc = '首页_登录_登录失败断言'

    def assert_by_txt(self,access_web,excepct,locator,doc=""):
        """
        :param excepct:预期的结果值
        :param locater: 希望对比的实际数据的元素定位坐标
        :param doc:
        :return:
        """
        MyLog.info("需要获取文本断言的元素是{}".format(locator))
        txt = self.get_element_text(locator,doc=doc)
        try:
&gt;           assert excepct == txt
E           AssertionError

PageObject\base_page.py:270: AssertionError</failure></testcase><testcase classname="TestCase.test_login.TestLogin" name="test_1_login_success[data0]" time="6.009" /></testsuite></testsuites>